"""Initial revision

Revision ID: dacb9b683ce1
Revises:
Create Date: 2023-06-14 21:16:55.923472

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "dacb9b683ce1"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_code",
        sa.Column("code", sa.String(length=36), nullable=False),
        sa.Column("event_id", sa.String(length=300), nullable=False),
        sa.Column("date_created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("date_expires", sa.DateTime(timezone=True), nullable=False),
        sa.Column("name", sa.String(length=300), nullable=True),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("code", name=op.f("pk_access_code")),
    )
    op.create_table(
        "account",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=300), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_account")),
    )
    op.create_table(
        "cart",
        sa.Column("id", sa.String(length=64), nullable=False),
        sa.Column("date_created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("cart_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "pricing_result", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cart")),
    )
    op.create_table(
        "checkout",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "state",
            sa.Enum("pending", "canceled", "complete", name="checkoutstate"),
            nullable=False,
        ),
        sa.Column("date_created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("changes_applied", sa.Boolean(), nullable=False),
        sa.Column("service", sa.String(length=32), nullable=False),
        sa.Column("external_id", sa.String(length=300), nullable=True),
        sa.Column(
            "external_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("cart_id", sa.String(length=64), nullable=False),
        sa.Column("cart_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "pricing_result", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_checkout")),
    )
    op.create_table(
        "event_stats",
        sa.Column("id", sa.String(length=300), nullable=False),
        sa.Column("next_number", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_event_stats")),
    )
    op.create_table(
        "hook_log",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("attempts", sa.Integer(), nullable=False),
        sa.Column("retry_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("config", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("body", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_hook_log")),
    )
    op.create_table(
        "registration",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("state", sa.String(length=16), nullable=False),
        sa.Column("event_id", sa.String(length=300), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("date_created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("date_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("number", sa.Integer(), nullable=True),
        sa.Column("option_ids", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("email", sa.String(length=300), nullable=True),
        sa.Column("first_name", sa.String(length=300), nullable=True),
        sa.Column("last_name", sa.String(length=300), nullable=True),
        sa.Column("preferred_name", sa.String(length=300), nullable=True),
        sa.Column("extra_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_registration")),
    )
    op.create_index(
        "ix_registration_extra_data_jsonb",
        "registration",
        ["extra_data"],
        unique=False,
        postgresql_using="gin",
        postgresql_ops={"extra_data": "jsonb_path_ops"},
    )
    op.create_table(
        "credential",
        sa.Column("id", sa.String(length=1024), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(length=32), nullable=False),
        sa.Column("date_created", sa.DateTime(timezone=True), nullable=False),
        sa.Column("date_updated", sa.DateTime(timezone=True), nullable=True),
        sa.Column("date_last_used", sa.DateTime(timezone=True), nullable=True),
        sa.Column("date_expires", sa.DateTime(timezone=True), nullable=True),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
            name=op.f("fk_credential_account_id_account"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_credential")),
    )
    op.create_table(
        "registration_account",
        sa.Column("registration_id", sa.UUID(), nullable=False),
        sa.Column("account_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
            name=op.f("fk_registration_account_account_id_account"),
        ),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.id"],
            name=op.f("fk_registration_account_registration_id_registration"),
        ),
        sa.PrimaryKeyConstraint(
            "registration_id", "account_id", name=op.f("pk_registration_account")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("registration_account")
    op.drop_table("credential")
    op.drop_index(
        "ix_registration_extra_data_jsonb",
        table_name="registration",
        postgresql_using="gin",
        postgresql_ops={"extra_data": "jsonb_path_ops"},
    )
    op.drop_table("registration")
    op.drop_table("hook_log")
    op.drop_table("event_stats")
    op.drop_table("checkout")
    op.drop_table("cart")
    op.drop_table("account")
    op.drop_table("access_code")
    # ### end Alembic commands ###
