name: oes-registration
volumes:
  postgres-data:
networks:
  server:
  client:

configs:
  config:
    # Must be made readable by uid or gid 1000
    file: ./config.yml
  events:
    # Must be made readable by uid or gid 1000
    file: ./events.yml
  client:
    # Must be made readable by uid or gid 101
    file: ./config.json
  cert:
    file: ./nginx/example.crt
  cert-key:
    file: ./nginx/example.key
  nginx:
    file: ./nginx/nginx.conf
  nginx-general:
    file: ./nginx/general.conf
  nginx-proxy:
    file: ./nginx/proxy.conf
  nginx-security:
    file: ./nginx/security.conf
  nginx-site-localhost:
    file: ./nginx/sites-available/localhost.conf
  nginx-site-localhost-8000:
    file: ./nginx/sites-available/localhost-8000.conf

services:
  postgres:
    image: postgres:15.3-alpine3.18
    networks:
      - server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  server:
    build:
      context: ../server
      dockerfile: ../server/Dockerfile
    command: ["--bind", "0.0.0.0"]
    networks:
      - server
    depends_on:
      - postgres
    configs:
      - source: config
        target: /config/config.yml
      - source: events
        target: /config/events.yml

  client:
    build:
      context: ../js
      dockerfile: ../js/Dockerfile
    networks:
      - client
    configs:
      - source: client
        target: /usr/share/nginx/html/config.json

  nginx:
    image: nginx:1.25.0-alpine3.17
    networks:
      - client
      - server
    depends_on:
      - server
      - client
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    configs:
      - source: cert
        target: /etc/nginx/ssl/example.crt
      - source: cert-key
        target: /etc/nginx/ssl/example.key
      - source: nginx
        target: /etc/nginx/nginx.conf
      - source: nginx-general
        target: /etc/nginx/general.conf
      - source: nginx-proxy
        target: /etc/nginx/proxy.conf
      - source: nginx-security
        target: /etc/nginx/security.conf
      - source: nginx-site-localhost
        target: /etc/nginx/sites-enabled/localhost.conf
      - source: nginx-site-localhost-8000
        target: /etc/nginx/sites-enabled/localhost-8000.conf
