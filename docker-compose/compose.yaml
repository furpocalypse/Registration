name: oes-registration
volumes:
  postgres-data:
networks:
  server:
  client:

configs:
  config:
    # Must be made readable by uid or gid 1000
    file: ./config.yml
  events:
    # Must be made readable by uid or gid 1000
    file: ./events.yml
  interviews:
    # Must be made readable by uid or gid 1000
    file: ./interviews.yml
  webhooks:
    # Must be made readable by uid or gid 1000
    file: ./webhooks.yml
  client:
    # Must be made readable by uid or gid 101
    file: ./config.json
  cert:
    file: ./nginx/example.crt
  nginx:
    file: ./nginx/nginx.conf
  nginx-general:
    file: ./nginx/general.conf
  nginx-proxy:
    file: ./nginx/proxy.conf
  nginx-security:
    file: ./nginx/security.conf
  nginx-site-localhost:
    file: ./nginx/sites-available/localhost.conf

secrets:
  cert-key:
    file: ./nginx/example.key
  interview-encryption-key:
    # Must be made readable by uid or gid 1000
    file: ./example-interview-encryption-key

services:
  postgres:
    image: postgres:15.3-alpine3.18
    networks:
      - server
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  server:
    build:
      context: ../server
    entrypoint: /bin/sh
    command:
      - -c
      - |
        sleep 3  # hack to work around pg init not being finished yet
        alembic upgrade head
        exec oes-registration \
          --bind 0.0.0.0 \
          --root-path /api \
          --config /config/config.yml \
          --events /config/events.yml
    networks:
      - server
    depends_on:
      - postgres
    configs:
      - source: config
        target: /config/config.yml
      - source: events
        target: /config/events.yml

  interview:
    image: ghcr.io/open-event-systems/interview-server:latest
    command:
      ["--host", "0.0.0.0", "--port", "8000", "--root-path", "/api/interview"]
    networks:
      - server
    configs:
      - source: interviews
        target: /config/interviews.yml
    secrets:
      - source: interview-encryption-key
        target: /config/encryption_key

  webhooks:
    image: ghcr.io/open-event-systems/webhooks:latest
    networks:
      - server
    configs:
      - source: webhooks
        target: /config/config.yml

  client:
    build:
      context: ../js
    networks:
      - client
    configs:
      - source: client
        target: /usr/share/nginx/html/config.json

  nginx:
    image: nginx:1.25.0-alpine3.17
    networks:
      - client
      - server
    depends_on:
      - server
      - interview
      - client
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    configs:
      - source: cert
        target: /etc/nginx/ssl/example.crt
      - source: nginx
        target: /etc/nginx/nginx.conf
      - source: nginx-general
        target: /etc/nginx/general.conf
      - source: nginx-proxy
        target: /etc/nginx/proxy.conf
      - source: nginx-security
        target: /etc/nginx/security.conf
      - source: nginx-site-localhost
        target: /etc/nginx/sites-enabled/localhost.conf
    secrets:
      - source: cert-key
        target: /etc/nginx/ssl/example.key
